@using DevExtreme.AspNet.Mvc.Builders
@using DevExtreme.AspNet.Mvc;
<style>
    .dx-toolbar .dx-toolbar-item:last-child {
        display: inline-block;
        position: relative;
        margin: 10px;
        padding: 0 20px;
        text-align: center;
        text-decoration: none;
        font: bold 12px/25px Arial, sans-serif;
        text-shadow: 1px 1px 1px rgba(255,255,255, .22);
        -webkit-border-radius: 30px;
        -moz-border-radius: 30px;
        border-radius: 30px;
        -webkit-box-shadow: 1px 1px 1px rgba(0,0,0, .29), inset 1px 1px 1px rgba(255,255,255, .44);
        -moz-box-shadow: 1px 1px 1px rgba(0,0,0, .29), inset 1px 1px 1px rgba(255,255,255, .44);
        box-shadow: 1px 1px 1px rgba(0,0,0, .29), inset 1px 1px 1px rgba(255,255,255, .44);
        -webkit-transition: all 0.15s ease;
        -moz-transition: all 0.15s ease;
        -o-transition: all 0.15s ease;
        -ms-transition: all 0.15s ease;
        transition: all 0.15s ease;
        color: #3e5706;
        background: #a5cd4e; /* Old browsers */
        background: -moz-linear-gradient(top, #a5cd4e 0%, #6b8f1a 100%); /* FF3.6+ */
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#a5cd4e), color-stop(100%,#6b8f1a)); /* Chrome,Safari4+ */
        background: -webkit-linear-gradient(top, #a5cd4e 0%,#6b8f1a 100%); /* Chrome10+,Safari5.1+ */
        background: -o-linear-gradient(top, #a5cd4e 0%,#6b8f1a 100%); /* Opera 11.10+ */
        background: -ms-linear-gradient(top, #a5cd4e 0%,#6b8f1a 100%); /* IE10+ */
        background: linear-gradient(top, #a5cd4e 0%,#6b8f1a 100%); /* W3C */
    }

    .big {
        padding: 0 40px;
        padding-top: 10px;
        height: 45px;
        text-transform: uppercase;
        font: bold 20px/22px Arial, sans-serif;
    }

        .big span {
            display: block;
            text-transform: none;
            font: italic normal 12px/18px Georgia, sans-serif;
            text-shadow: 1px 1px 1px rgba(255,255,255, .12);
        }

    .button:hover {
        -webkit-box-shadow: 1px 1px 1px rgba(0,0,0,.29), inset 0px 0px 2px rgba(0,0,0, .5);
        -moz-box-shadow: 1px 1px 1px rgba(0,0,0,.29), inset 0px 0px 2px rgba(0,0,0, .5);
        box-shadow: 1px 1px 1px rgba(0,0,0,.29), inset 0px 0px 2px rgba(0,0,0, .5);
    }

    .button:active {
        -webkit-box-shadow: inset 0px 0px 3px rgba(0,0,0, .8);
        -moz-box-shadow: inset 0px 0px 3px rgba(0,0,0, .8);
        box-shadow: inset 0px 0px 3px rgba(0,0,0, .8);
    }

    .hover-tabs-img-close {
        top: 175px;
        margin: 0px;
        position: absolute;
        font-weight: 600;
        z-index: 999;
        left: 18%;
    }

    @@media screen and (min-width:1140px) {
        img.hover-tabs-img {
            left: 9%;
        }
    }

</style>

<script>
    window.addEventListener("load", function () {
        setTimeout(function () {
            var secilenID = document.getElementById("sonuc");
            secilenID.style.display = "none";
        }, 4000);
    });
    window.addEventListener("load", function () {
        setTimeout(function () {
            var secilenID = document.getElementById("sonuc2");
            secilenID.style.display = "none";
        }, 4000);
    });
</script>
<div>
    <div><p class="hover-tabs-img-close" id="sonuc">Filterle</p></div>
    <img src="~/WebDesign/img/hover-on-tabs.svg" id="sonuc2" class="hover-tabs-img" alt="Filterle" />
</div>
<div>
    @(Html.DevExtreme().DataGrid<MotorAsinBasketRobot.Entities.Concrete.Product>()
        .DataSource(d => d.Mvc()
        .Controller("ClientProduct")
        .LoadAction("GetClientProductList")
        .Key("Id"))
        .ID("accountGrid")
        .ColumnMinWidth(100)
        .ColumnAutoWidth(true)
        @*.Selection(s => s.Mode(SelectionMode.Multiple))*@
        .Export(e => e.Enabled(true).AllowExportSelectedData(true))
        .ShowBorders(false)
        .Paging(paging => paging.PageSize(10))
        .Pager(pager =>
        {
            pager.Visible(true);
            pager.DisplayMode(GridPagerDisplayMode.Full);
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new JS("[5, 10,30,70,120,180, 1000, 'all']"));
            pager.ShowInfo(true);
            pager.ShowNavigationButtons(true);
        })

        .SearchPanel(s => s
        .Visible(true)
        .HighlightCaseSensitive(true).Width(600))
        .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
        .Columns(columns =>
        {
            columns.AddFor(m => m.Id).Caption("No").Width(190);
            columns.AddFor(m => m.ProductReferance).Caption("Ürün No").CssClass("text-center").Width(190);
            columns.AddFor(m => m.ProductCode).Caption("Ürün Kodu").CssClass("text-center");
            columns.AddFor(m => m.ProductGroup1).Caption("Minimum Sipariş").CssClass("text-center");
            columns.AddFor(m => m.ProductGroup2).Caption("Ürün Grubu").CssClass("text-center");
            columns.AddFor(m => m.ProductGroup3).Caption("Ürün Grubu").CssClass("text-center");
            columns.AddFor(m => m.ProductGroup4).Caption("Ürün Grubu").CssClass("text-center");
            columns.AddFor(m => m.IsActive).Caption("Ürün Aktif Mi?").DataType(GridColumnDataType.Boolean).Width(250);



        })
        .OnToolbarPreparing("onToolbarPreparing")

        .FilterRow(f => f.Visible(true))
        .HeaderFilter(f => f.Visible(true))
        .Height(740)
        .ShowBorders(true)
        .Grouping(g => g.AutoExpandAll(false))
        .Editing(editing =>
        {
            @*editing.Mode(GridEditMode.Popup);*@
            @*editing.AllowUpdating(true);*@
            @*editing.AllowAdding(true);*@
            @*editing.AllowDeleting(true);*@
        })

        )
</div>
<script>

    function onToolbarPreparing(e) {
        // Export button creation
        e.toolbarOptions.items.unshift({
            widget: "dxButton",
            location: "before",
            options: {
                text: "Verileri Dışa Aktar",
                onClick: function () {
                    var grid = $("#accountGrid").dxDataGrid("instance");
                    var totalRowCount = grid.totalCount();

                    // Disable server-side paging to fetch all data
                    grid.option("paging.enabled", false);

                    // Fetch all data from the server
                    grid.getDataSource().load().done(function (result) {
                        var gridDataSource = result;
                        var json = JSON.stringify(gridDataSource);

                        // Export the data
                        var blob = new Blob([json], { type: "application/json" });
                        var url = URL.createObjectURL(blob);

                        var a = document.createElement("a");
                        a.href = url;
                        a.download = "data.json";
                        a.click();

                        // Re-enable server-side paging
                        grid.option("paging.enabled", true);
                    });
                }
            }
        });
    }

            //function onToolbarPreparing(e) {
            //    // Export butonu oluşturma
            //    e.toolbarOptions.items.unshift({
            //        widget: "dxButton",
            //        location: "before",
            //        options: {
            //            text: "Verileri Dışa Aktar",
            //            onClick: function () {
            //                // Tüm verileri JSON formatında dışa aktarma
            //                var gridDataSource = $("#accountGrid").dxDataGrid("getDataSource")['_items'];
            //                var json = JSON.stringify(gridDataSource);

            //                // Dışa aktarılan verileri indirme
            //                var blob = new Blob([json], { type: "application/json" });
            //                var url = URL.createObjectURL(blob);

            //                var a = document.createElement("a");
            //                a.href = url;
            //                a.download = "data.json";
            //                a.click();
            //            }
            //        }
            //    });
            //}
                            //function onToolbarPreparing(e) {
                        //    // Export butonu oluşturma
                        //    e.toolbarOptions.items.unshift({
                        //        widget: "dxButton",
                        //        location: "before",
                        //        options: {
                        //            text: "Verileri Dışa Aktar",
                        //            onClick: function () {
                        //                // Seçili verileri JSON formatında dışa aktarma
                        //                var selectedRowsData = $("#accountGrid").dxDataGrid("getSelectedRowsData");
                        //                var json = JSON.stringify(selectedRowsData);

                        //                // Dışa aktarılan verileri indirme
                        //                var blob = new Blob([json], { type: "application/json" });
                        //                var url = URL.createObjectURL(blob);

                        //                var a = document.createElement("a");
                        //                a.href = url;
                        //                a.download = "data.json";
                        //                a.click();
                        //            }
                        //        }
                        //    });
                        //}
</script>
